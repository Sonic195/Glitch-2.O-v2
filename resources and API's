jokes: https://v2.jokeapi.dev/joke/Any?safe-mode
pexel api: tG5Qb0xJDx1oSmGDkCwpHZazlxadwid58zOBpkaH0t8lz0HVMNlogTEm


app.post("/interactions", async function (req, res) {
  const { type, id, data } = req.body;

  if (type === InteractionType.PING) {
    return res.send({ type: InteractionResponseType.PONG });
  }

  if (type === InteractionType.APPLICATION_COMMAND) {
    const { name } = data;
        if (name === "random") {
      const query = interaction.options.getString("topic"); 
      fetch(
        `https://api.pexels.com/v1/search?query=${encodeURIComponent(
          query
        )}&per_page=1`,
        {
          headers: {
            Authorization:
              "tG5Qb0xJDx1oSmGDkCwpHZazlxadwid58zOBpkaH0t8lz0HVMNlogTEm",
          },
        }
      )
        .then((response) => response.json())
        .then((data) => {
          if (data && data.photos.length > 0) {
            const imageUrl = data.photos[0].src.original;
            return res.send({
              type: InteractionResponseType.CHANNEL_MESSAGE_WITH_SOURCE,
              data: {
                content: imageUrl,
              },
            });
          } else {
            // Handle the case where no images are returned for the query
            return res.send({
              type: InteractionResponseType.CHANNEL_MESSAGE_WITH_SOURCE,
              data: {
                content: "No images found for your query.",
              },
            });
          }
        })
        .catch((error) => {
          console.error("Error fetching from Pexels API:", error);
          // Handle the error appropriately
        });
    }