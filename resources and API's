jokes: https://v2.jokeapi.dev/joke/Any?safe-mode
pexel api: tG5Qb0xJDx1oSmGDkCwpHZazlxadwid58zOBpkaH0t8lz0HVMNlogTEm


app.post("/interactions", async function (req, res) {
  // Interaction type and data
  const { type, id, data } = req.body;

  /**
   * Handle verification requests
   */
  if (type === InteractionType.PING) {
    return res.send({ type: InteractionResponseType.PONG });
  }

  /**
   * Handle slash command requests
   * See https://discord.com/developers/docs/interactions/application-commands#slash-commands
   */
  if (type === InteractionType.APPLICATION_COMMAND) {
    const { name } = data;
        if (name === "random") {
      const query = interaction.options.getString("topic"); // Get the user's query from the command options

      // Make a request to the Pexels API
      fetch(
        `https://api.pexels.com/v1/search?query=${encodeURIComponent(
          query
        )}&per_page=1`,
        {
          headers: {
            Authorization:
              "tG5Qb0xJDx1oSmGDkCwpHZazlxadwid58zOBpkaH0t8lz0HVMNlogTEm",
          },
        }
      )
        .then((response) => response.json())
        .then((data) => {
          if (data && data.photos.length > 0) {
            const imageUrl = data.photos[0].src.original;

            // Send a message with the image URL into the channel where the command was triggered from
            return res.send({
              type: InteractionResponseType.CHANNEL_MESSAGE_WITH_SOURCE,
              data: {
                content: imageUrl, // You might want to send this as an embed for a better presentation
              },
            });
          } else {
            // Handle the case where no images are returned for the query
            return res.send({
              type: InteractionResponseType.CHANNEL_MESSAGE_WITH_SOURCE,
              data: {
                content: "No images found for your query.",
              },
            });
          }
        })
        .catch((error) => {
          console.error("Error fetching from Pexels API:", error);
          // Handle the error appropriately
        });
    }